---
import CoordinateParser from "coordinate-parser";
import geoLib from "geolib";

interface DecaTypes {
	decLatitude: string;
	decLongitude: string;
}

interface Props {
	markerList: DecaTypes[];
}

const { markerList } = Astro.props as Props;
const latLongDecimals = markerList.map(gps => {
	return {
		latitude: gps.decLatitude,
		longitude: gps.decLongitude,
	};
});

const getCenterObject = geoLib.getCenterOfBounds(latLongDecimals);
const center = getCenterObject ? `${getCenterObject.latitude},${getCenterObject.longitude}` : "0,0";
---

<script is:inline type='module' src='https://unpkg.com/@googlemaps/extended-component-library'></script>
<!-- Configure and load the Maps JS SDK with your API key -->
<gmpx-api-loader async defer key=`${import.meta.env.PUBLIC_GOOGLE_MAPS_API_KEY}`></gmpx-api-loader>
<gmp-map id='google-map' async defer slot='main' center={center} zoom='15' map-id='63bde473a221dba3'>
	{
		latLongDecimals.map(position => {
			const positionString = `${position.latitude},${position.longitude}`;
			return <gmp-advanced-marker data-marker-id={positionString} class='pannable' gmp-clickable title={positionString} position={positionString} />;
		})
	}
</gmp-map>
<script>
	import { MarkerClusterer } from "@googlemaps/markerclusterer";
	window.addEventListener("load", async () => {
		const mapElement = document.getElementById("google-map");
		const markers = document.querySelectorAll("gmp-advanced-marker.pannable");
		const images = document.querySelectorAll("img") as NodeListOf<HTMLImageElement>;
		const { InfoWindow } = await google.maps.importLibrary("maps");
		const infoWindow = new InfoWindow({ maxWidth: 400 });

		markers.forEach(marker => {
			marker.addEventListener("gmp-click", () => {
				const markerID = marker.getAttribute("data-marker-id") as string;
				const image = Array.from(images)
					.find(image => image.dataset.markerId === markerID)
					?.cloneNode(true) as HTMLImageElement;
				mapElement.innerMap.panTo(marker.position);
				if (infoWindow.isOpen) {
					infoWindow.close();
				}
				const headerElement = document.createElement("div");
				headerElement.innerHTML = `<h2 class="text-2xl font-bold" style='color: black;'>${marker.title}</h2>`;
				infoWindow.setContent(image);
				infoWindow.setHeaderContent(headerElement);
				infoWindow.open({
					map: mapElement.innerMap,
					anchor: marker,
				});
			});
		});

		new MarkerClusterer({
			map: mapElement.innerMap,
			markers: markers as unknown as google.maps.Marker[],
		});
	});
</script>

<style>
	#google-map {
		height: 0px;
		transition: height 0.8s ease-in-out;
	}
	#google-map[showMap] {
		height: 600px;
	}
</style>
