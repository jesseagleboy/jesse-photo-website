---
import { getImage, Image } from "astro:assets";
import Welcome from "../components/Welcome.astro";
import Layout from "../layouts/Layout.astro";
import type { ImageMetadata } from "astro";
import { Masonry } from "astro-masonry";

const listOfFireworks = import.meta.glob<{ default: ImageMetadata }>("/src/assets/fireworks-images/*.jpeg", { eager: true });
const listing = Object.values(listOfFireworks).map(image => image.default);
---

<Layout>
	<Masonry
		sortByHeight={true}
		breakpointCols={{
			default: 4,
			1100: 3,
			700: 2,
			500: 1,
		}}>
		{
			listing.map((image_data, index) => {
				return (
					<div id='image-container'>
						<button id='show-dialog-button'>See Image</button>
						<div id='index'>{index + 1}</div>
						<Image src={image_data} alt='Fireworks' id='mason-image' />
						<dialog>
							<div id='dialog-content'>
								<Image src={image_data} alt='Fireworks' id='dialog-image' />
								<button id='close-dialog-button'>Close</button>
							</div>
						</dialog>
					</div>
				);
			})
		}
	</Masonry>

	<style lang='scss'>
		:global(.astro-masonry-grid) {
			/* Your custom styles */
			/* You will need to add display: flex */
			gap: 0.5rem;
			padding: 3rem;
		}

		:global(.astro-masonry-grid_column) {
			/* Your custom column styles */
			display: flex;
			flex-direction: column;
			gap: 1rem;
			justify-content: space-between;
		}

		#image-container {
			position: relative;
			overflow: hidden;
			border-radius: 10px;
			border: 1px solid rgba(217, 215, 215, 0.844);

			#mason-image:hover {
				transform: scale(1.1);
				transition: transform 0.5s;
			}
		}

		#index {
			position: absolute;
			top: 1%;
			left: 1%;
			background-color: rgba(0, 0, 0, 0.5);
			color: white;
			padding: 5px;
			border-radius: 5px;
			z-index: 2;
		}

		button {
			position: absolute;
			top: 1%;
			right: 1%;
			background-color: rgba(0, 0, 0, 0.5);
			color: white;
			padding: 5px;
			border-radius: 5px;
			z-index: 2;
		}

		body {
			background-color: black;
		}

		dialog {
			background-color: rgba(0, 0, 0, 0.8);
			border: none;
			border-radius: 0.5rem;
		}

		#dialog-content {
			height: 85dvh;
			overflow: hidden;
			overflow-y: scroll;
			scrollbar-width: none;
		}
		#dialog-image {
			object-fit: contain;
			width: 100%;
			height: 100%;
		}
	</style>
</Layout>

<script>
	const dialog = document.querySelectorAll<HTMLDialogElement>("dialog")!;
	const showDialogButton = document.querySelectorAll<HTMLButtonElement>("#show-dialog-button")!;
	const closeButton = document.querySelectorAll<HTMLButtonElement>("#close-dialog-button")!;

	showDialogButton.forEach((button, index) => {
		button.addEventListener("click", () => {
			dialog[index].showModal();
		});
	});

	closeButton.forEach((button, index) => {
		button.addEventListener("click", () => {
			dialog[index].close();
		});
	});
</script>
