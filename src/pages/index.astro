---
import { getImage, Image } from "astro:assets";
import Layout from "../layouts/Layout.astro";
import type { ImageMetadata } from "astro";
import { Masonry } from "astro-masonry";
import ImageModal from "../components/ImageModal.astro";
import { setupExifData, type DataTypes } from "@/functions/exifdata";

const listOfFireworks = import.meta.glob<{ default: ImageMetadata }>(
	"/src/assets/fireworks-images/*.jpeg",
	{ eager: true },
);



const mapping =
	Object.entries(listOfFireworks).map<Promise<DataTypes>>(setupExifData);

const listing = await Promise.all(mapping);
---

<Layout>
	<h3 class='text-4xl font-bold text-center p-4'>Disney Fireworks by Jesse Slomowitz</h3>

	<Masonry
		sortByHeight={true}
		breakpointCols={{
			default: 4,
			1100: 3,
			700: 2,
			500: 1,
		}}>
		{
			listing.map(async ({ image_data, googleMapsSrc, date }, index) => {
				return (
					<div id='image-container'>
						<button id='show-dialog-button' class='btn btn-xs' data-GPSSrc={googleMapsSrc}>
							See Image
						</button>
						<div id='index' class='badge'>
							{index + 1}
						</div>
						<Image src={image_data} alt='Fireworks' id='mason-image' />
						{/* <dialog class='modal'>
							<div class='modal-box max-w-full'>
								<div id='dialog-content' class='bg-base-100 shadow-sm h-full'>
									<div class="flex">
										<figure>
											<Image src={image_data} alt='Fireworks' id='dialog-image' style="width: 32px; height: 32px; object-fit:contain"/>
										</figure>
										<iframe />
									</div>
									<div class='card-body'>
										<div class='card-actions justify-end'>
											<div id='time-area' class='badge badge-outline'>
												Date: {date}
											</div>
										</div>
									</div>
									<button id='close-dialog-button' class='btn btn-md'>
										X
									</button>
								</div>
							</div>
						</dialog> */}
						<ImageModal imageUrl={image_data} date={date} index={index} />
					</div>
				);
			})
		}
	</Masonry>
</Layout>

<style lang='scss'>
	:global(.astro-masonry-grid) {
		/* Your custom styles */
		/* You will need to add display: flex */
		gap: 0.5rem;
		padding: 3rem;
	}

	:global(.astro-masonry-grid_column) {
		/* Your custom column styles */
		display: flex;
		flex-direction: column;
		gap: 1rem;
		justify-content: space-between;
	}

	#image-container {
		position: relative;
		overflow: hidden;
		border-radius: 10px;
		border: 1px solid rgba(217, 215, 215, 0.844);

		#mason-image:hover {
			transform: scale(1.1);
			transition: transform 0.5s;
		}
	}

	#index {
		position: absolute;
		top: 1%;
		left: 1%;
		z-index: 2;
	}

	button {
		position: absolute;
		top: 1%;
		right: 1%;
		z-index: 2;
	}

	dialog {
		background-color: rgba(0, 0, 0, 0.8);
		border: none;
		border-radius: 0.5rem;
		overflow: visible;
		scroll: auto;
	}

	#dialog-content {
		scrollbar-width: none;
	}
</style>

<script>
	const dialog = document.querySelectorAll<HTMLDialogElement>("dialog");
	const showDialogButton = document.querySelectorAll<HTMLButtonElement>("#show-dialog-button");

	showDialogButton.forEach((button, index) => {
		button.addEventListener("click", () => {
			dialog[index].showModal();
			const src = button.getAttribute("data-GPSSrc");
			const iframe = dialog[index].querySelector("iframe");
			if (iframe) {
				iframe.src = src || "";
			}
		});
	});
</script>
